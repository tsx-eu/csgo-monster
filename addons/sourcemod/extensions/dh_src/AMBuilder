# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'dh'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',

  'physnatives.cpp',
  'navnatives.cpp',

  'subhook/subhook.c',

  'Nav/Navigation.cpp',
  'Nav/NavGrid.cpp',
  'Nav/NavMeshArea.cpp',
  'Nav/NavMeshConnection.cpp',
  'Nav/NavMeshCornerLightIntensity.cpp',
  'Nav/NavMesh.cpp',
  'Nav/NavMeshEncounterPath.cpp',
  'Nav/NavMeshEncounterSpot.cpp',
  'Nav/NavMeshHidingSpot.cpp',
  'Nav/NavMeshLadderConnection.cpp',
  'Nav/NavMeshLadder.cpp',
  'Nav/NavMeshLoader.cpp',
  'Nav/NavMeshPlace.cpp',
  'Nav/NavMeshVisibleArea.cpp',

  'HLLib/HLLibWrapper.cpp',
  'HLLib/HLLib/ProcStream.cpp',
  'HLLib/HLLib/VBSPFile.cpp',
  'HLLib/HLLib/HLLib.cpp',
  'HLLib/HLLib/Mapping.cpp',
  'HLLib/HLLib/SGAFile.cpp',
  'HLLib/HLLib/WADFile.cpp',
  'HLLib/HLLib/Wrapper.cpp',
  'HLLib/HLLib/NullStream.cpp',
  'HLLib/HLLib/FileMapping.cpp',
  'HLLib/HLLib/StreamMapping.cpp',
  'HLLib/HLLib/GCFStream.cpp',
  'HLLib/HLLib/DirectoryFile.cpp',
  'HLLib/HLLib/XZPFile.cpp',
  'HLLib/HLLib/Checksum.cpp',
  'HLLib/HLLib/GCFFile.cpp',
  'HLLib/HLLib/Utility.cpp',
  'HLLib/HLLib/MemoryStream.cpp',
  'HLLib/HLLib/DebugMemory.cpp',
  'HLLib/HLLib/DirectoryItem.cpp',
  'HLLib/HLLib/PAKFile.cpp',
  'HLLib/HLLib/FileStream.cpp',
  'HLLib/HLLib/VPKFile.cpp',
  'HLLib/HLLib/MappingStream.cpp',
  'HLLib/HLLib/ZIPFile.cpp',
  'HLLib/HLLib/NCFFile.cpp',
  'HLLib/HLLib/Error.cpp',
  'HLLib/HLLib/DirectoryFolder.cpp',
  'HLLib/HLLib/Stream.cpp',
  'HLLib/HLLib/BSPFile.cpp',
  'HLLib/HLLib/Package.cpp',
  'HLLib/HLLib/MemoryMapping.cpp'
]

defines = [
  'SUBHOOK_STATIC',
]

###############
# Make sure to edit PackageScript, which copies your files to their appropriate locations
# Simple extensions do not need to modify past this point.

project = Extension.HL2Project(builder, projectName + '.ext')

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp')]

project.sources += sourceFiles
  
for sdk_name in Extension.sdks:
  sdk = Extension.sdks[sdk_name]
  
  binary = Extension.HL2Config(project, projectName + '.ext.' + sdk.ext, sdk)
  
  binary.compiler.defines += defines
  if builder.target_platform == 'linux':
    binary.compiler.cflags += ['-fms-extensions']

Extension.extensions = builder.Add(project)
